#!/bin/bash

# FXGL Auto-Sync Setup Script
# Sets up automatic upstream synchronization using cron (macOS/Linux)

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}[SETUP]${NC} $1"
}

print_header "üîß Setting up automatic FXGL upstream sync..."

# Check if we're in the right directory
if [ ! -f "pom.xml" ]; then
    print_error "Not in FXGL root directory (no pom.xml found)"
    exit 1
fi

FXGL_DIR=$(pwd)
SYNC_SCRIPT="$FXGL_DIR/scripts/sync-upstream.sh"

# Verify sync script exists
if [ ! -f "$SYNC_SCRIPT" ]; then
    print_error "Sync script not found at: $SYNC_SCRIPT"
    print_error "Please ensure sync-upstream.sh exists in the scripts directory"
    exit 1
fi

print_status "FXGL directory: $FXGL_DIR"
print_status "Sync script: $SYNC_SCRIPT"

# Create wrapper script that logs output
WRAPPER_SCRIPT="$FXGL_DIR/scripts/auto-sync-wrapper.sh"
cat > "$WRAPPER_SCRIPT" << EOF
#!/bin/bash

# Auto-sync wrapper script with logging
# Generated by setup-auto-sync.sh

LOG_DIR="$FXGL_DIR/logs"
LOG_FILE="\$LOG_DIR/upstream-sync-\$(date +%Y-%m-%d).log"

# Create logs directory if it doesn't exist
mkdir -p "\$LOG_DIR"

# Run sync with logging
echo "=== FXGL Upstream Sync - \$(date) ===" >> "\$LOG_FILE"
cd "$FXGL_DIR"
bash "$SYNC_SCRIPT" >> "\$LOG_FILE" 2>&1
echo "=== Sync completed - \$(date) ===" >> "\$LOG_FILE"
echo "" >> "\$LOG_FILE"

# Keep only last 7 days of logs
find "\$LOG_DIR" -name "upstream-sync-*.log" -mtime +7 -delete 2>/dev/null || true
EOF

chmod +x "$WRAPPER_SCRIPT"
print_status "Created wrapper script: $WRAPPER_SCRIPT"

# Create logs directory
mkdir -p "$FXGL_DIR/logs"

# Detect OS and set up appropriate scheduling
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS - use launchd
    print_header "Setting up launchd job for macOS..."
    
    PLIST_FILE="$HOME/Library/LaunchAgents/com.fxgl.upstream-sync.plist"
    
    cat > "$PLIST_FILE" << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.fxgl.upstream-sync</string>
    
    <key>ProgramArguments</key>
    <array>
        <string>/bin/bash</string>
        <string>$WRAPPER_SCRIPT</string>
    </array>
    
    <key>StartCalendarInterval</key>
    <dict>
        <key>Hour</key>
        <integer>9</integer>
        <key>Minute</key>
        <integer>0</integer>
    </dict>
    
    <key>RunAtLoad</key>
    <false/>
    
    <key>StandardOutPath</key>
    <string>$FXGL_DIR/logs/launchd-stdout.log</string>
    
    <key>StandardErrorPath</key>
    <string>$FXGL_DIR/logs/launchd-stderr.log</string>
</dict>
</plist>
EOF

    # Load the launchd job
    launchctl unload "$PLIST_FILE" 2>/dev/null || true
    launchctl load "$PLIST_FILE"
    
    print_status "‚úÖ macOS launchd job configured"
    print_status "   Plist file: $PLIST_FILE"
    print_status "   Schedule: Daily at 9:00 AM"
    
    echo
    print_status "macOS Management Commands:"
    print_status "  Start now:  launchctl start com.fxgl.upstream-sync"
    print_status "  Stop:       launchctl stop com.fxgl.upstream-sync"
    print_status "  Unload:     launchctl unload $PLIST_FILE"
    print_status "  Check:      launchctl list | grep fxgl"

elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux - use cron
    print_header "Setting up cron job for Linux..."
    
    # Check if cron is installed
    if ! command -v crontab &> /dev/null; then
        print_error "crontab not found. Please install cron first:"
        print_error "  Ubuntu/Debian: sudo apt-get install cron"
        print_error "  CentOS/RHEL:   sudo yum install cronie"
        exit 1
    fi
    
    # Add cron job (daily at 9 AM)
    CRON_JOB="0 9 * * * $WRAPPER_SCRIPT"
    
    # Check if job already exists
    if crontab -l 2>/dev/null | grep -q "$WRAPPER_SCRIPT"; then
        print_warning "Cron job already exists for this script"
    else
        # Add new cron job
        (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -
        print_status "‚úÖ Linux cron job configured"
        print_status "   Schedule: Daily at 9:00 AM"
    fi
    
    echo
    print_status "Linux Management Commands:"
    print_status "  View jobs:   crontab -l"
    print_status "  Edit jobs:   crontab -e"
    print_status "  Test now:    $WRAPPER_SCRIPT"

else
    print_warning "Unsupported OS: $OSTYPE"
    print_status "Manual setup required. Run the sync script manually:"
    print_status "  $SYNC_SCRIPT"
fi

echo
print_header "üìÅ File Structure Created"
print_status "Scripts:"
print_status "  ‚Ä¢ $SYNC_SCRIPT (main sync logic)"
print_status "  ‚Ä¢ $WRAPPER_SCRIPT (automated wrapper)"
print_status "Logs:"
print_status "  ‚Ä¢ $FXGL_DIR/logs/ (sync logs directory)"

echo
print_header "‚úÖ Auto-sync setup completed!"
print_status "The upstream branch will be automatically synced daily at 9:00 AM"
print_status "Check logs in: $FXGL_DIR/logs/"

echo
print_warning "Manual Operations:"
print_warning "  ‚Ä¢ Run sync now: bash $SYNC_SCRIPT"
print_warning "  ‚Ä¢ Test wrapper: bash $WRAPPER_SCRIPT"
print_warning "  ‚Ä¢ View logs: ls -la $FXGL_DIR/logs/"